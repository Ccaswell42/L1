package main

import (
	"fmt"
)

// функция binSearch принимает отсортированный массив и элемент массива, ищет индекс элемента и возвращает его
func binSearch(arr []int, val int) int {
	// устанавливаем границы нашего массива
	first := 0
	last := len(arr) - 1

	// в цикле ищем середину, оперделяем в какой части массива (в меньшей чем середина или большей)
	//находится искомый элемент. и соответственно сдвигаем границы нашего поиска в 2 раза при каждой итерациии.
	for {
		// определяем середину нашего массива
		mid := (first + last) / 2
		if val < arr[mid] {
			last = mid - 1 // если искомый элемент меньше середины - сдвигаем првую границу на середину
		} else if val > arr[mid] {
			first = mid + 1 // если искомый элемент больше середины - сдвигаем левую границу на (середина+1)
		} else {
			return mid
		}
		// если эдемента нет в массиве, границы смыкаются и возвращаем -1 в качестве ошибки
		if first > last {
			return -1
		}
	}
}
func main() {

	arr := []int{-8, 1, 19, 24, 29, 76, 99}
	fmt.Println(binSearch(arr, -8))
	fmt.Println(binSearch(arr, 24))
	fmt.Println(binSearch(arr, 76))
	fmt.Println(binSearch(arr, 90))

}
